@inject NavigationManager NavigationManager


<div>
    <h2>Esta es la pagina de Setup GIA TIC</h2>
    <p>Sector @nuevoCliente.InfoCliente.Sector</p>
    <p>Nombre @nuevoCliente.InfoCliente.Nombre</p>
    <p>Madurez @nuevoCliente.InfoCliente.Madurez</p>
</div>

<PageTitle>GIA TIC</PageTitle>

<h3>GIA TIC</h3>
<div class="main">
    <div class="section" style="display: block;">
        <h2>Equipos Telecomunicaciones</h2>
        <select @bind="equiposTelcoDropdown" style="display: block;">
            @foreach (var option in VSTIC.Telecomunicaciones.getVariables())
                {
                <option value="@option">@option</option>
                }
        </select>
        <input type="number" @bind="cantidadEquiposTelco" style="display: block;" />
        <select @bind="actualizacionEquiposTelcoDropdown" style="display: block;">
            @foreach (var option in actualizacion)
                {
                <option value="@option">@option</option>
                }
        </select>
        <select @bind="distribucionEquiposTelcoDropdown" style="display: block;">
            @foreach (var option in distribucion)
                {
                <option value="@option">@option</option>
                }
        </select>
        <select @bind="atencionEquiposTelcoDropdown" style="display: block;">
            @foreach (var option in atencion)
                {
                <option value="@option">@option</option>
                }
        </select>
        <button @onclick="AgregarATelco" style="display: block;">Agregar Equipos</button>
    </div>

    <div class="section" style="display: block;">
        <h2>Bases de Datos</h2>
        <select @bind="basesDeDatosDropdown" style="display: block;">
            @foreach (var option in basesDeDatos)
                {
                <option value="@option">@option</option>
                }
        </select>
        <input type="number" @bind="cantidadBasesDeDatos" style="display: block;" />
        <select @bind="actualizacionBasesDeDatosDropdown" style="display: block;">
            @foreach (var option in actualizacion)
                {
                <option value="@option">@option</option>
                }
        </select>
        <select @bind="distribucionBasesDeDatosDropdown" style="display: block;">
            @foreach (var option in distribucion)
                {
                <option value="@option">@option</option>
                }
        </select>
        <select @bind="atencionBasesDeDatosDropdown" style="display: block;">
            @foreach (var option in atencion)
                {
                <option value="@option">@option</option>
                }
        </select>
        <button @onclick="AgregarABasesDeDatos" style="display: block;">Agregar Bases de Datos</button>
    </div>

    <div class="section" style="display: block;">
        <h2>Servidores Fisicos</h2>
        <select @bind="servidoresFisicosDropdown" style="display: block;">
            @foreach (var option in servidores)
                {
                <option value="@option">@option</option>
                }
        </select>
        <input type="number" @bind="cantidadServidoresFisicos" style="display: block;" />
        <select @bind="actualizacionServidoresFisicosDropdown" style="display: block;">
            @foreach (var option in actualizacion)
                {
                <option value="@option">@option</option>
                }
        </select>
        <select @bind="distribucionServidoresFisicosDropdown" style="display: block;">
            @foreach (var option in distribucion)
                {
                <option value="@option">@option</option>
                }
        </select>
        <select @bind="atencionServidoresFisicosDropdown" style="display: block;">
            @foreach (var option in atencion)
                {
                <option value="@option">@option</option>
                }
        </select>
        <button @onclick="AgregarAServidoresFisicos" style="display: block;">Agregar Servidores</button>
    </div>

    <div class="section" style="display: block;">
        <h2 style="display: block;">Servidores Virtuales</h2>
        <select @bind="servidoresVirtualesDropdown" style="display: block;">
            @foreach (var option in servidores)
                {
                <option value="@option">@option</option>
                }
        </select>
        <input type="number" @bind="cantidadServidoresVirtuales" style="display: block;" />
        <select @bind="actualizacionServidoresVirtualesDropdown" style="display: block;">
            @foreach (var option in actualizacion)
                {
                <option value="@option">@option</option>
                }
        </select>
        <button @onclick="AgregarAServidoresVirtuales" style="display: block;">Agregar Servidores</button>
    </div>

    <div class="section" style="display: block;">
        <h2 style="display: block;">Plataformas Centralizadas</h2>
        <select @bind="centralizadasDropdown" style="display: block;">
            @foreach (var option in plataformasCentralizadas)
            {
                <option value="@option">@option</option>
            }
        </select>
        <input type="number" @bind="cantidadCentralizadas" style="display: block;" />
        <select @bind="actualizacionCentralizadasDropdown" style="display: block;">
            @foreach (var option in actualizacion)
            {
                <option value="@option">@option</option>
            }
        </select>
        <select @bind="atencionCentralizadasDropdown" style="display: block;">
            @foreach (var option in atencion)
            {
                <option value="@option">@option</option>
            }
        </select>
        <select @bind="distribucionCentralizadasDropdown" style="display: block;">
            @foreach (var option in distribucion)
            {
                <option value="@option">@option</option>
            }
        </select>
        <select @bind="contratoCentralizadasDropdown" style="display: block;">
            @foreach (var option in contratos)
            {
                <option value="@option">@option</option>
            }
        </select>
        <button @onclick="AgregarAPlataformasCentralizadas" style="display: block;">Agregar Plataformas Centralizadas</button>
    </div>

</div>



@code {


    public List<Setup>? listaSetupInicial;

    [CascadingParameter]
    public Cliente? nuevoCliente { get; set; }

    [CascadingParameter]
    public ListasSetupTemporales? ListasTemporales { get; set; }

    private string? equiposTelcoDropdown;
    private int cantidadEquiposTelco;
    private string? actualizacionEquiposTelcoDropdown;
    private string? distribucionEquiposTelcoDropdown;
    private string? atencionEquiposTelcoDropdown;


    private string? basesDeDatosDropdown;
    private int cantidadBasesDeDatos;
    private string? actualizacionBasesDeDatosDropdown;
    private string? distribucionBasesDeDatosDropdown;
    private string? atencionBasesDeDatosDropdown;

    private string? servidoresFisicosDropdown;
    private string? servidoresVirtualesDropdown;
    private int cantidadServidoresFisicos;
    private string? actualizacionServidoresFisicosDropdown;
    private string? distribucionServidoresFisicosDropdown;
    private string? atencionServidoresFisicosDropdown;

    private string? actualizacionServidoresVirtualesDropdown;
    private int cantidadServidoresVirtuales;

    private string? centralizadasDropdown;
    private int cantidadCentralizadas;
    private string? actualizacionCentralizadasDropdown;
    private string? distribucionCentralizadasDropdown;
    private string? atencionCentralizadasDropdown;
    private string? contratoCentralizadasDropdown;

    //TODO: no se por que esto tiene que estar static, creo que despues puedo solucionar eso con la api??
    private static List<string> equiposTelcoOptions = new List<string> { "Equipo", "Switches Cisco", "Switches Otros", "Routers TP-Link", "Routers Ubiquity", "Routers Otros", "Firewalls Fortinet", "Firewalls Otros", "Centrales Avaya", "Centrales Otros", "Centrales Otros" };
    private List<string> basesDeDatos = new List<string> { "Base de Datos", "SQL", "SQL Nueva", "Oracle", "Oracle Nueva", "Otras", "Otras Nueva" };
    private List<string> servidores = new List<string> { "Servidor", "Servidor Windows Previo 2012", "Servidor Windows Post 2012 No Actualizado", "Servidor Windows Actualizado", "Servidor Unix Previo 2012", "Servidor Unix Post 2012 No Actualizado", "Servidor Unix Actualizado", "Servidor Otros No Actualizado", "Servidor Otros Actualizado", "Servidor Otros Nuevo", "Servidor Windows Nuevo", "Servidor Unix Nuevo" };
    private List<string> plataformasCentralizadas = new List<string> { "Equipo", "AS400" };
    private List<string> actualizacion = new List<string> { "Nivel de Actualizacion", "Actualizacion Baja", "Actualizacion Parcial", "Actualizacion Completa" };
    private List<string> nubes = new List<string> { "Nube", "AWS", "Azure", "Google", "Otro", "Mixto" };
    private List<string> distribucion = new List<string> { "Distribucion", "Centralizado", "Parcialmente Centralizado", "No Centralizado" };
    private List<string> atencion = new List<string> { "Atencion", "Servicio On-Site", "Servicio Remoto", "Servicio Hibrido" };
    private List<string> estabilizacion = new List<string> { "Estabilizacion", "Estabilizacion Baja", "Estabilizacion Media", "Estabilizacion Alta" };
    private List<string> contratos = new List<string> { "Sin Contrato", "Contrato de Software", "Contrato de Hardware", "Contrato de Actualizacion", "Contrato Secundario", "Contrato Completo" };


    [CascadingParameter]
    public VariablesSetupTIC VSTIC { get; set; }


    public void AgregarATelco()
    {
        Setup nuevoSetupTelco = new Setup("Telco");
        nuevoSetupTelco.Cantidad = cantidadEquiposTelco;
        nuevoSetupTelco.TipoEquipo = new Variable(equiposTelcoDropdown, VSTIC.Telecomunicaciones.getEsfuerzoVariable(equiposTelcoDropdown));
        nuevoSetupTelco.Actualizacion = new Variable(actualizacionEquiposTelcoDropdown, VSTIC.Telecomunicaciones.getEsfuerzoVariable(actualizacionEquiposTelcoDropdown));
        nuevoSetupTelco.Distribucion = new Variable(distribucionEquiposTelcoDropdown, VSTIC.Telecomunicaciones.getEsfuerzoVariable(distribucionEquiposTelcoDropdown));
        nuevoSetupTelco.Atencion = new Variable(atencionEquiposTelcoDropdown, VSTIC.Telecomunicaciones.getEsfuerzoVariable(atencionEquiposTelcoDropdown));
        nuevoSetupTelco.calcularCostoConEsfuerzo();
        if (ListasTemporales.ListaTICTelecomunicaciones != null)
        {
            ListasTemporales.ListaTICTelecomunicaciones.Add(nuevoSetupTelco);

        }
        else
        {
            ListasTemporales.ListaTICTelecomunicaciones = new List<Setup>();
            ListasTemporales.ListaTICTelecomunicaciones.Add(nuevoSetupTelco);
        }
        nuevoCliente.ListasGIA.ListasTIC.ListaSetupTIC.ListaTelecomunicaciones.Add(nuevoSetupTelco);
    }

    public void AgregarABasesDeDatos()
    {
        Setup nuevoSetupBD = new Setup("Bases de Datos");
        nuevoSetupBD.Cantidad = cantidadBasesDeDatos;
        nuevoSetupBD.TipoEquipo = new Variable(basesDeDatosDropdown, VSTIC.BasesDeDatos.getEsfuerzoVariable(basesDeDatosDropdown));
        nuevoSetupBD.Actualizacion = new Variable(actualizacionBasesDeDatosDropdown, VSTIC.BasesDeDatos.getEsfuerzoVariable(actualizacionBasesDeDatosDropdown));
        nuevoSetupBD.Distribucion = new Variable(distribucionBasesDeDatosDropdown, VSTIC.BasesDeDatos.getEsfuerzoVariable(distribucionBasesDeDatosDropdown));
        nuevoSetupBD.Atencion = new Variable(atencionBasesDeDatosDropdown, VSTIC.BasesDeDatos.getEsfuerzoVariable(atencionBasesDeDatosDropdown));
        //TODO: estabilizacion bases de datos?
        nuevoSetupBD.calcularCostoConEsfuerzo();
        if (ListasTemporales.ListaTICBasesDeDatos != null)
        {
            ListasTemporales.ListaTICBasesDeDatos.Add(nuevoSetupBD);

        }
        else
        {
            ListasTemporales.ListaTICBasesDeDatos = new List<Setup>();
            ListasTemporales.ListaTICBasesDeDatos.Add(nuevoSetupBD);
        }
        nuevoCliente.ListasGIA.ListasTIC.ListaSetupTIC.ListaBasesDeDatos.Add(nuevoSetupBD);
    }

    public void AgregarAServidoresFisicos()
    {
        Setup nuevoSetupServidoresFisicos = new Setup("Servidores Fisicos");
        nuevoSetupServidoresFisicos.Cantidad = cantidadServidoresFisicos;
        nuevoSetupServidoresFisicos.TipoEquipo = new Variable(servidoresFisicosDropdown, VSTIC.ServidoresFisicos.getEsfuerzoVariable(servidoresFisicosDropdown));
        //TODO: creo que no va actualizacion asi sino solo en el tipo de equipo
        nuevoSetupServidoresFisicos.Actualizacion = new Variable(actualizacionServidoresFisicosDropdown, VSTIC.ServidoresFisicos.getEsfuerzoVariable(actualizacionServidoresFisicosDropdown));
        nuevoSetupServidoresFisicos.Distribucion = new Variable(distribucionServidoresFisicosDropdown, VSTIC.ServidoresFisicos.getEsfuerzoVariable(distribucionServidoresFisicosDropdown));
        nuevoSetupServidoresFisicos.Atencion = new Variable(atencionServidoresFisicosDropdown, VSTIC.ServidoresFisicos.getEsfuerzoVariable(atencionServidoresFisicosDropdown));
        //TODO: estabilizacion servidores?
        nuevoSetupServidoresFisicos.calcularCostoConEsfuerzo();

        if (ListasTemporales.ListaTICServidoresFisicos != null)
        {
            ListasTemporales.ListaTICServidoresFisicos.Add(nuevoSetupServidoresFisicos);

        }
        else
        {
            ListasTemporales.ListaTICServidoresFisicos = new List<Setup>();
            ListasTemporales.ListaTICServidoresFisicos.Add(nuevoSetupServidoresFisicos);
        }

        nuevoCliente.ListasGIA.ListasTIC.ListaSetupTIC.ListaServidoresFisicos.Add(nuevoSetupServidoresFisicos);
    }

    public void AgregarAServidoresVirtuales()
    {
        Setup nuevoSetupServidoresVirtuales = new Setup("Servidores Virtuales");
        nuevoSetupServidoresVirtuales.Cantidad = cantidadServidoresVirtuales;
        nuevoSetupServidoresVirtuales.TipoEquipo = new Variable(servidoresVirtualesDropdown, VSTIC.ServidoresVirtuales.getEsfuerzoVariable(servidoresVirtualesDropdown));
        //TODO: creo que no va actualizacion asi sino solo en el tipo de equipo
        nuevoSetupServidoresVirtuales.Actualizacion = new Variable(actualizacionServidoresVirtualesDropdown, VSTIC.ServidoresVirtuales.getEsfuerzoVariable(actualizacionServidoresVirtualesDropdown));
        //TODO: estabilizacion servidores?
        nuevoSetupServidoresVirtuales.calcularCostoConEsfuerzo();

        if (ListasTemporales.ListaTICServidoresVirtuales != null)
        {
            ListasTemporales.ListaTICServidoresVirtuales.Add(nuevoSetupServidoresVirtuales);

        }
        else
        {
            ListasTemporales.ListaTICServidoresVirtuales = new List<Setup>();
            ListasTemporales.ListaTICServidoresVirtuales.Add(nuevoSetupServidoresVirtuales);
        }

        nuevoCliente.ListasGIA.ListasTIC.ListaSetupTIC.ListaServidoresVirtuales.Add(nuevoSetupServidoresVirtuales);
    }

    //TODO: Esto esta malisimo jeje
    public void AgregarAPlataformasCentralizadas()
    {
        Setup nuevoSetupTelco = new Setup("Plataformas Centralizadas");
        nuevoSetupTelco.Cantidad = cantidadEquiposTelco;
        nuevoSetupTelco.TipoEquipo = new Variable(equiposTelcoDropdown, VSTIC.PlataformasCentralizadas.getEsfuerzoVariable(equiposTelcoDropdown));
        nuevoSetupTelco.Actualizacion = new Variable(actualizacionEquiposTelcoDropdown, VSTIC.PlataformasCentralizadas.getEsfuerzoVariable(actualizacionEquiposTelcoDropdown));
        nuevoSetupTelco.Distribucion = new Variable(distribucionEquiposTelcoDropdown, VSTIC.PlataformasCentralizadas.getEsfuerzoVariable(distribucionEquiposTelcoDropdown));
        nuevoSetupTelco.Atencion = new Variable(atencionEquiposTelcoDropdown, VSTIC.PlataformasCentralizadas.getEsfuerzoVariable(atencionEquiposTelcoDropdown));
        nuevoSetupTelco.calcularCostoConEsfuerzo();

        if (ListasTemporales.ListaTICPlataformasCentralizadas != null)
        {
            ListasTemporales.ListaTICPlataformasCentralizadas.Add(nuevoSetupTelco);

        }
        else
        {
            ListasTemporales.ListaTICPlataformasCentralizadas = new List<Setup>();
            ListasTemporales.ListaTICPlataformasCentralizadas.Add(nuevoSetupTelco);
        }

        nuevoCliente.ListasGIA.ListasTIC.ListaSetupTIC.ListaPlataformasCentralizadas.Add(nuevoSetupTelco);
    }
}
