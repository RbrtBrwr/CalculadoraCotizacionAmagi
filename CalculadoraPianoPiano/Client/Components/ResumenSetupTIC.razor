@inject NavigationManager NavigationManager


@*<div>
    <h2>Esta es la pagina de Resumen Setup GIA TIC</h2>
    <p>Sector @nuevoCliente.InfoCliente.Sector</p>
    <p>Nombre @nuevoCliente.InfoCliente.Nombre</p>
    <p>Madurez @nuevoCliente.InfoCliente.Madurez</p>
</div>*@

<PageTitle>Resumen Setup GIA TIC</PageTitle>

<h3>Resumen Setup GIA TIC</h3>
<div class="main">

    <div class="sector">
        <h1>Telecomunicaciones</h1>
        @foreach (Setup setup in ListasTemporales.ListaTICTelecomunicaciones)
            {
            <div class="resumenSetup" style="display: block;">
                <span style="display: block;">
                    <label for="dropdownTipoEquipo">Equipos: </label>
                    <select id="dropdownTipoEquipo" @bind="@setup.TipoEquipo.Nombre">
                        <option value="@setup.TipoEquipo.Nombre">@setup.TipoEquipo.Nombre</option>
                        @foreach (var option in VSTIC.Telecomunicaciones.getVariables())
                            {
                                if (option != @setup.TipoEquipo.Nombre)
                                {
                                <option value="@option">@option</option>

                                }
                            }
                    </select>
                </span>

                <span style="display: block;">
                    <label for="dropdownActualizacion">Actualizacion: </label>
                    <select id="dropdownActualizacion" @bind="@setup.Actualizacion.Nombre">
                        <option value="@setup.Actualizacion.Nombre">@setup.Actualizacion.Nombre</option>
                        @foreach (var option in VSTIC.Actualizacion.getVariables())
                            {
                                if (option != @setup.Actualizacion.Nombre)
                                {
                                <option value="@option">@option</option>

                                }
                            }
                    </select>
                </span>

                <span style="display: block;">
                    <label for="dropdownDistribucion">Distribucion: </label>
                    <select id="dropdownDistribucion" @bind="@setup.Distribucion.Nombre">
                        <option value="@setup.Distribucion.Nombre">@setup.Distribucion.Nombre</option>
                        @foreach (var option in VSTIC.Distribucion.getVariables())
                            {
                                if (option != @setup.Distribucion.Nombre)
                                {
                                <option value="@option">@option</option>

                                }
                            }
                    </select>
                </span>

                <span style="display: block;">
                    <label for="dropdownAtencion">Atencion: </label>
                    <select id="dropdownAtencion" @bind="@setup.Atencion.Nombre">
                        <option value="@setup.Atencion.Nombre">@setup.Atencion.Nombre</option>
                        @foreach (var option in VSTIC.Atencion.getVariables())
                            {
                                if (option != @setup.Atencion.Nombre)
                                {
                                <option value="@option">@option</option>

                                }
                            }
                    </select>
                </span>

                <span style="display: block;">
                    <label for="cantidadEquipos">Numero de Equipos: </label>
                    <input id="cantidadEquipos" type="number" @bind="setup.Cantidad" />
                </span>

                <button @onclick="() => removeSetup(ListasTemporales.ListaTICTelecomunicaciones, setup)">Eliminar Equipos</button>

            </div>
        }
    </div>


    <div class="sector">
        <h1>Bases De Datos</h1>
        @foreach (Setup setup in ListasTemporales.ListaTICBasesDeDatos)
        {
            <div class="resumenSetup" style="display: block;">
                <span style="display: block;">
                    <label for="dropdownTipoEquipo">Base de Datos: </label>
                    <select id="dropdownTipoEquipo" @bind="@setup.TipoEquipo.Nombre">
                        <option value="@setup.TipoEquipo.Nombre">@setup.TipoEquipo.Nombre</option>
                        @foreach (var option in VSTIC.BasesDeDatos.getVariables())
                        {
                            if (option != @setup.TipoEquipo.Nombre)
                            {
                                <option value="@option">@option</option>

                            }
                        }
                    </select>
                </span>

                <span style="display: block;">
                    <label for="dropdownActualizacion">Actualizacion: </label>
                    <select id="dropdownActualizacion" @bind="@setup.Actualizacion.Nombre">
                        <option value="@setup.Actualizacion.Nombre">@setup.Actualizacion.Nombre</option>
                        @foreach (var option in VSTIC.Actualizacion.getVariables())
                        {
                            if (option != @setup.Actualizacion.Nombre)
                            {
                                <option value="@option">@option</option>

                            }
                        }
                    </select>
                </span>

                <span style="display: block;">
                    <label for="dropdownDistribucion">Distribucion: </label>
                    <select id="dropdownDistribucion" @bind="@setup.Distribucion.Nombre">
                        <option value="@setup.Distribucion.Nombre">@setup.Distribucion.Nombre</option>
                        @foreach (var option in VSTIC.Distribucion.getVariables())
                        {
                            if (option != @setup.Distribucion.Nombre)
                            {
                                <option value="@option">@option</option>

                            }
                        }
                    </select>
                </span>

                <span style="display: block;">
                    <label for="dropdownAtencion">Atencion: </label>
                    <select id="dropdownAtencion" @bind="@setup.Atencion.Nombre">
                        <option value="@setup.Atencion.Nombre">@setup.Atencion.Nombre</option>
                        @foreach (var option in VSTIC.Atencion.getVariables())
                        {
                            if (option != @setup.Atencion.Nombre)
                            {
                                <option value="@option">@option</option>

                            }
                        }
                    </select>
                </span>

                <span style="display: block;">
                    <label for="cantidadEquipos">Numero de Bases de Datos: </label>
                    <input id="cantidadEquipos" type="number" @bind="setup.Cantidad" />
                </span>

                <button @onclick="() => removeSetup(ListasTemporales.ListaTICBasesDeDatos, setup)">Eliminar Equipos</button>

            </div>
        }
    </div>

    <div class="sector">
        <h1>Servidores Fisicos</h1>
        @foreach (Setup setup in ListasTemporales.ListaTICServidoresFisicos)
        {
            <div class="resumenSetup" style="display: block;">
                <span style="display: block;">
                    <label for="dropdownTipoEquipo">Servidor: </label>
                    <select id="dropdownTipoEquipo" @bind="@setup.TipoEquipo.Nombre">
                        <option value="@setup.TipoEquipo.Nombre">@setup.TipoEquipo.Nombre</option>
                        @foreach (var option in VSTIC.ServidoresFisicos.getVariables())
                        {
                            if (option != @setup.TipoEquipo.Nombre)
                            {
                                <option value="@option">@option</option>

                            }
                        }
                    </select>
                </span>

                <span style="display: block;">
                    <label for="dropdownActualizacion">Actualizacion: </label>
                    <select id="dropdownActualizacion" @bind="@setup.Actualizacion.Nombre">
                        <option value="@setup.Actualizacion.Nombre">@setup.Actualizacion.Nombre</option>
                        @foreach (var option in VSTIC.Actualizacion.getVariables())
                        {
                            if (option != @setup.Actualizacion.Nombre)
                            {
                                <option value="@option">@option</option>

                            }
                        }
                    </select>
                </span>

                <span style="display: block;">
                    <label for="dropdownDistribucion">Distribucion: </label>
                    <select id="dropdownDistribucion" @bind="@setup.Distribucion.Nombre">
                        <option value="@setup.Distribucion.Nombre">@setup.Distribucion.Nombre</option>
                        @foreach (var option in VSTIC.Distribucion.getVariables())
                        {
                            if (option != @setup.Distribucion.Nombre)
                            {
                                <option value="@option">@option</option>

                            }
                        }
                    </select>
                </span>

                <span style="display: block;">
                    <label for="dropdownAtencion">Atencion: </label>
                    <select id="dropdownAtencion" @bind="@setup.Atencion.Nombre">
                        <option value="@setup.Atencion.Nombre">@setup.Atencion.Nombre</option>
                        @foreach (var option in VSTIC.Atencion.getVariables())
                        {
                            if (option != @setup.Atencion.Nombre)
                            {
                                <option value="@option">@option</option>

                            }
                        }
                    </select>
                </span>

                <span style="display: block;">
                    <label for="cantidadEquipos">Numero de Servidores: </label>
                    <input id="cantidadEquipos" type="number" @bind="setup.Cantidad" />
                </span>

                <button @onclick="() => removeSetup(ListasTemporales.ListaTICServidoresFisicos, setup)">Eliminar Servidores</button>

            </div>
        }
    </div>

    <div class="sector">
        <h1>Servidores Virtuales</h1>
        @foreach (Setup setup in ListasTemporales.ListaTICServidoresVirtuales)
        {
            <div class="resumenSetup" style="display: block;">
                <span style="display: block;">
                    <label for="dropdownTipoEquipo">Servidor: </label>
                    <select id="dropdownTipoEquipo" @bind="@setup.TipoEquipo.Nombre">
                        <option value="@setup.TipoEquipo.Nombre">@setup.TipoEquipo.Nombre</option>
                        @foreach (var option in VSTIC.ServidoresVirtuales.getVariables())
                        {
                            if (option != @setup.TipoEquipo.Nombre)
                            {
                                <option value="@option">@option</option>

                            }
                        }
                    </select>
                </span>

                <span style="display: block;">
                    <label for="dropdownActualizacion">Actualizacion: </label>
                    <select id="dropdownActualizacion" @bind="@setup.Actualizacion.Nombre">
                        <option value="@setup.Actualizacion.Nombre">@setup.Actualizacion.Nombre</option>
                        @foreach (var option in VSTIC.Actualizacion.getVariables())
                        {
                            if (option != @setup.Actualizacion.Nombre)
                            {
                                <option value="@option">@option</option>

                            }
                        }
                    </select>
                </span>

                <span style="display: block;">
                    <label for="cantidadEquipos">Numero de Servidores: </label>
                    <input id="cantidadEquipos" type="number" @bind="setup.Cantidad" />
                </span>

                <button @onclick="() => removeSetup(ListasTemporales.ListaTICServidoresVirtuales, setup)">Eliminar Servidores</button>

            </div>
        }
    </div>

    <button @onclick="ContinuarAOngoing">Continuar</button>


</div>



@code {

    [CascadingParameter]
    public Cliente? nuevoCliente { get; set; }

    [CascadingParameter]
    public ListasSetupTemporales? ListasTemporales { get; set; }

    [CascadingParameter]
    public VariablesSetupTIC VSTIC { get; set; }

    private string? equiposTelcoDropdown;
    private int cantidadEquiposTelco;
    private string? actualizacionEquiposTelcoDropdown;
    private string? distribucionEquiposTelcoDropdown;
    private string? atencionEquiposTelcoDropdown;


    private string? basesDeDatosDropdown;
    private int cantidadBasesDeDatos;
    private string? actualizacionBasesDeDatosDropdown;
    private string? distribucionBasesDeDatosDropdown;
    private string? atencionBasesDeDatosDropdown;

    private string? servidoresFisicosDropdown;
    private string? servidoresVirtualesDropdown;
    private int cantidadServidoresFisicos;
    private string? actualizacionServidoresFisicosDropdown;
    private string? distribucionServidoresFisicosDropdown;
    private string? atencionServidoresFisicosDropdown;

    private string? actualizacionServidoresVirtualesDropdown;
    private int cantidadServidoresVirtuales;

    private string? centralizadasDropdown;
    private int cantidadCentralizadas;
    private string? actualizacionCentralizadasDropdown;
    private string? distribucionCentralizadasDropdown;
    private string? atencionCentralizadasDropdown;
    private string? contratoCentralizadasDropdown;

    private List<List<string>> _serviciosTelco = new List<List<string>>();
    private List<List<string>> _serviciosBD = new List<List<string>>();
    private List<List<string>> _serviciosServidoresFisicos = new List<List<string>>();
    private List<List<string>> _serviciosServidoresVirtuales = new List<List<string>>();
    private List<List<string>> _serviciosPlataformasCentralizadas = new List<List<string>>();

    private void ContinuarAOngoing()
    {
        nuevoCliente.ListasGIA.ListasTIC.ListaSetupTIC.ListaTelecomunicaciones = ListasTemporales.ListaTICTelecomunicaciones;
        nuevoCliente.ListasGIA.ListasTIC.ListaSetupTIC.ListaBasesDeDatos = ListasTemporales.ListaTICBasesDeDatos;
        nuevoCliente.ListasGIA.ListasTIC.ListaSetupTIC.ListaServidoresFisicos = ListasTemporales.ListaTICServidoresFisicos;
        nuevoCliente.ListasGIA.ListasTIC.ListaSetupTIC.ListaServidoresVirtuales = ListasTemporales.ListaTICServidoresVirtuales;
        nuevoCliente.ListasGIA.ListasTIC.ListaSetupTIC.ListaPlataformasCentralizadas = ListasTemporales.ListaTICPlataformasCentralizadas;
        NavigationManager.NavigateTo("/resumenPrueba");
    }

    private void removeSetup(List<Setup> lista, Setup setup)
    {
        lista.Remove(setup);
    }

    private List<List<string>> getServiciosArea(string area)
    {

        switch (area)
        {
            case "Telecomunicaciones":
                List<List<string>> serviciosTelco = new List<List<string>>();
                List<string> nuevoServicio;
                if (ListasTemporales.ListaTICTelecomunicaciones != null)
                {
                    foreach (Setup servicio in ListasTemporales.ListaTICTelecomunicaciones)
                    {
                        nuevoServicio = new List<string>();
                        nuevoServicio.Add("Equipo: " + servicio.TipoEquipo.Nombre);
                        nuevoServicio.Add("Cantidad: " + servicio.Cantidad);
                        nuevoServicio.Add("Actualizacion: " + servicio.Actualizacion.Nombre);
                        nuevoServicio.Add("Distribucion: " + servicio.Distribucion.Nombre);
                        nuevoServicio.Add("Atencion: " + servicio.Atencion.Nombre);
                        nuevoServicio.Add("Costo: " + servicio.Costo);
                        serviciosTelco.Add(nuevoServicio);
                    }

                }
                return serviciosTelco;
            case "Bases de Datos":
                List<List<string>> serviciosBD = new List<List<string>>();
                if (ListasTemporales.ListaTICBasesDeDatos != null)
                {
                    foreach (Setup servicio in ListasTemporales.ListaTICBasesDeDatos)
                    {
                        nuevoServicio = new List<string>();
                        nuevoServicio.Add("Equipo: " + servicio.TipoEquipo.Nombre);
                        nuevoServicio.Add("Cantidad: " + servicio.Cantidad);
                        nuevoServicio.Add("Actualizacion: " + servicio.Actualizacion.Nombre);
                        nuevoServicio.Add("Distribucion: " + servicio.Distribucion.Nombre);
                        nuevoServicio.Add("Atencion: " + servicio.Atencion.Nombre);
                        nuevoServicio.Add("Costo: " + servicio.Costo);
                        serviciosBD.Add(nuevoServicio);
                    }

                }
                return serviciosBD;
            case "Servidores Fisicos":
                List<List<string>> serviciosServidoresFisicos = new List<List<string>>();
                if (ListasTemporales.ListaTICServidoresFisicos != null)
                {
                    foreach (Setup servicio in ListasTemporales.ListaTICServidoresFisicos)
                    {
                        nuevoServicio = new List<string>();
                        nuevoServicio.Add("Equipo: " + servicio.TipoEquipo.Nombre);
                        nuevoServicio.Add("Cantidad: " + servicio.Cantidad);
                        nuevoServicio.Add("Actualizacion: " + servicio.Actualizacion.Nombre);
                        nuevoServicio.Add("Distribucion: " + servicio.Distribucion.Nombre);
                        nuevoServicio.Add("Atencion: " + servicio.Atencion.Nombre);
                        nuevoServicio.Add("Costo: " + servicio.Costo);
                        serviciosServidoresFisicos.Add(nuevoServicio);
                    }

                }
                return serviciosServidoresFisicos;
            case "Servidores Virtuales":
                List<List<string>> serviciosServidoresVirtuales = new List<List<string>>();
                if (ListasTemporales.ListaTICServidoresVirtuales != null)
                {
                    foreach (Setup servicio in ListasTemporales.ListaTICServidoresVirtuales)
                    {
                        nuevoServicio = new List<string>();
                        nuevoServicio.Add("Equipo: " + servicio.TipoEquipo.Nombre);
                        nuevoServicio.Add("Cantidad: " + servicio.Cantidad);
                        nuevoServicio.Add("Actualizacion: " + servicio.Actualizacion.Nombre);
                        nuevoServicio.Add("Costo: " + servicio.Costo);
                        serviciosServidoresVirtuales.Add(nuevoServicio);
                    }

                }
                return serviciosServidoresVirtuales;
            case "Plataformas Centralizadas":
                List<List<string>> serviciosPlataformasCentralizadas = new List<List<string>>();
                //TODO: falta todo esto
                if (ListasTemporales.ListaTICPlataformasCentralizadas != null)
                {
                    foreach (Setup servicio in ListasTemporales.ListaTICPlataformasCentralizadas)
                    {
                        nuevoServicio = new List<string>();
                        nuevoServicio.Add("Equipo: " + servicio.TipoEquipo.Nombre);
                        nuevoServicio.Add("Cantidad: " + servicio.Cantidad);
                        nuevoServicio.Add("Actualizacion: " + servicio.Actualizacion.Nombre);
                        nuevoServicio.Add("Distribucion: " + servicio.Distribucion.Nombre);
                        nuevoServicio.Add("Atencion: " + servicio.Atencion.Nombre);
                        nuevoServicio.Add("Costo: " + servicio.Costo);
                        serviciosPlataformasCentralizadas.Add(nuevoServicio);
                    }

                }
                return serviciosPlataformasCentralizadas;
            default:
                Console.WriteLine("Error");
                return new List<List<string>>();
        }
    }

    //protected override async Task OnInitializedAsync()
    //{
    //    _serviciosTelco = getServiciosArea("Telecomunicaciones");
    //    _serviciosBD = getServiciosArea("Bases de Datos");
    //    _serviciosServidoresFisicos = getServiciosArea("Servidores Fisicos");
    //    _serviciosServidoresVirtuales = getServiciosArea("Servidores Virtuales");
    //    _serviciosPlataformasCentralizadas = getServiciosArea("Plataformas Centralizadas");
    //}
}
